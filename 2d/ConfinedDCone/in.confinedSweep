



###############################  Startup
#[
###Big Four
#[
atom_style   hybrid angle sphere                
units		si
processors	* * 1
comm_modify	vel yes
#]

###Settings
#[   
variable Rc equal 7
variable Rp equal 40 #Aspect ratio of the sheet
variable Rr equal 33
variable seed equal 23487 
variable hgeom equal 0.127*(10^-3)*10 #Thickness of the sheet
variable hen equal 0.127*(10^-3)
variable sheetToCup equal 3/2 #Radius of the sheet to the cup
variable epsMax equal 0.6 #This is the maximum value of epsilon, d/Rcup
variable Esheet equal 5*10^7 #Youngs modulus of the sheet
variable poissonsSheet equal 1/3 #Poissons ratio of the sheet 
variable numsteps equal 20 #This is the number of steps that we will take to get to the target max value of epsilon
variable dens equal 800*${hen}/${hgeom} #density of paper kg.m^3
variable g equal 0.2
variable offset equal ${hgeom}*0.01
#]

###Constants
#[

#Grain-Grain/Grain-Wall
#[
variable coeffric equal 0
variable rolfric equal 0.1*${coeffric}
variable Eyoung equal 10^8
variable restitution equal 0.45
variable poissons equal 0.5
### kt will be set to NULL which is 4E/[2(2-nu)(1+nu)]
variable kr equal (4.0*${Eyoung})/(2.0*(2.0-${poissons})*(1.0+${poissons}))
variable xscaling equal 1
variable gammar equal 0
#]

#Elastic-Elastic Stretching
#[
variable r0e   equal ${hgeom}
variable rloe  equal ${r0e}*0.9
variable rhie  equal ${r0e}*1.1
variable Kel    equal ${Esheet}*${hen}*9*sqrt(3)/40
#]

#Elastic-Elastic Bending
#[
variable Bel equal (${Esheet}*(${hen}^3)/(12*(1-${poissonsSheet}^2)))*(4/(3*sqrt(3)))
#]

#Geometry
#[
variable Rsheet equal ${hgeom}*${Rp}
variable cuprad equal ${hgeom}*${Rr}
variable cupht equal ${cuprad}*2 #Of the cup
variable xyn equal -0.1 #Of the simulation box
variable xyp equal 0.1 #Of the simulation box
variable zp equal 2*${cupht} #Of the simulation box
variable clampR equal ${Rc}*${hgeom}+0.1*${hgeom}

variable zlevel equal ${cupht}+0.51*${hgeom} #This is the place that the sheet will start out, give us half a gd of fall space
variable indentation equal ${epsMax}*(${cuprad}-${clampR})/${numsteps} #This is the indentation on a single step of indentation 
#]


#]

###Times
#[
#variable startTime equal 1
variable startTime equal .1
variable loadTime equal 2
variable holdTime equal 1
variable speed equal 0.01
variable out equal 10000/${speed}
#variable thermoOut equal ${out}*0.1
variable thermoOut equal ${out}*.1
variable dout equal ${out}*15
variable r1 equal ${out}*${startTime}
variable r2 equal ${out}*${loadTime}
variable r3 equal ${out}*${holdTime}
variable time equal 0.0001*${speed}
#]

###Regions
#[
region 		simulationStation block ${xyn} ${xyp} ${xyn} ${xyp} 0 ${zp}
region cup cylinder z 0 ${offset} ${cuprad} 0 ${cupht} open 1 open 2
region clamp cylinder z 0 ${offset} ${clampR} 0 ${zp}



create_box 2 simulationStation bond/types 1 extra/bond/per/atom 6 angle/types 1 extra/angle/per/atom 9
change_box	all boundary f f f
#]

###Integration stuff
#[
variable neigh equal 1.2*${hgeom}
neighbor	${neigh} bin
neigh_modify	delay 0 every 1 check yes page 500000 one 50000
#]
#]














################################  Make the sheet, pair style, and dump 
#[

#Make It Granular 
#[
pair_style granular
pair_coeff  * * &
	hertz/material ${Eyoung} ${restitution} ${poissons} tangential mindlin NULL ${xscaling} ${coeffric} &
	rolling sds ${kr} ${gammar} ${rolfric} twisting marshall damping tsuji 
fix box all wall/gran/region granular &
	hertz/material ${Eyoung} ${restitution} ${poissons} tangential mindlin NULL ${xscaling} ${coeffric} &
	rolling sds ${kr} ${gammar} ${rolfric} twisting marshall damping tsuji &
	region simulationStation
#]

# Other walls 
#[
fix cupHard all wall/gran/region granular &
	hertz/material ${Eyoung} ${restitution} ${poissons} tangential mindlin NULL ${xscaling} ${coeffric} &
	rolling sds ${kr} ${gammar} ${rolfric} twisting marshall damping tsuji &
	region cup contacts
#]

include points_RpinGD40graind_0.00127.txt
#fix		grav all gravity ${g} vector 0 0 -1
set type 1 diameter ${hgeom}
set type 1 density ${dens}

special_bonds   lj/coul 0 1.0 1.0 
bond_style   harmonic
bond_coeff   1 ${Kel} ${r0e}
angle_style   cosine
angle_coeff   1 ${Bel}

group one type 1
create_bonds   many one one 1 ${rloe} ${rhie}

include angles_RpinGD40graind_0.00127.txt

#Thermo, Dump 
#[
thermo_style	custom step atoms time
thermo_modify	lost warn
thermo		${thermoOut}
timestep	${time}

compute stress all stress/atom NULL
compute contacts all contact/atom
variable pressure atom 2*(c_stress[1]+c_stress[2]+c_stress[3])/(c_contacts+.001)
compute bendingE all pe/atom angle
compute stretchingE all pe/atom bond

dump		lump all custom ${thermoOut} out*.dump id type radius x y z fx fy fz v_pressure c_contacts c_bendingE c_stretchingE f_cupHard[1]
dump_modify	lump pad 11
#]

#]














################################  Run the simulation

#Put the thing down 
#This is the value for viscosity that I have come up with so far, want to talk to doug before I shore this up.
#I have that ma = mg - visc*v so visc = 0.1(to make it smaller)*g*m/v, v=1
variable m equal mass(one)
variable visc equal 0.01*${m}*${g}
fix camp0 all viscous ${visc}

#Find the center particle
group clampg region clamp

fix		integration all nve/sphere
run ${r1}
unfix integration

#Make the indentor and move it into position
#create_atoms 2 single 0 0 ${cz}
#group two type 2
#variable zspeed equal -${ind1}/${startTime}
#fix ind two move linear 0 0 ${zspeed}
#set type 2 diameter ${bigd}
#set type 2 density #{dens}
#run ${r1}
#unfix ind #Remove the movement

#Run the steps of indentaton 
#variable i loop ${numsteps} #We will loop the number of times that we said 
#label iloop

#variable zspeed equal -${indentation}/${loadTime} #Each time we will indent at this speed
#fix ind two move linear 0 0 ${zspeed} #Make the indentor move 
#run ${r2} #Run the indentation
#unfix ind #Stop it from moving 
#fix hold two move linear 0 0 0 #Make it be still
#run ${r3} #Run the be still 
#unfix hold #Prep for next iteration

#next i
#jump SELF iloop

###Instead of making an indentor, I thought I might just grab the center particle and pull onit, why not??

variable zspeed equal -${indentation}/${loadTime} #Each time we will indent at this speed
group rest subtract all clampg
fix		integrationrest rest nve/sphere

variable i loop ${numsteps} #We will loop the number of times that we said 
label iloop
fix ind clampg move linear 0 0 ${zspeed} #Make the indentor move
run ${r2} #Run the indentation
unfix ind #Stop it from moving 
fix hold clampg move linear 0 0 0 #Make it be still
run ${r3} #Run the be still 
unfix hold #Prep for next iteration

next i
jump SELF iloop











